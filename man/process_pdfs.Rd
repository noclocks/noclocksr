% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pdf.R
\name{process_pdfs}
\alias{process_pdfs}
\title{Process PDF Invoices and Receipts}
\usage{
process_pdfs(
  input_dir,
  output_dir,
  archive_dir = fs::path(input_dir, "archive", Sys.Date()),
  log_file = getOption("log_file", fs::path(output_dir, "Logs", paste0(Sys.Date(),
    ".log"))),
  ...
)
}
\arguments{
\item{input_dir}{(Required) The directory containing the PDF files to process.}

\item{output_dir}{(Required) The directory to save the processed PDF files.}

\item{archive_dir}{(Optional) The directory to archive the processed PDF files.}

\item{log_file}{(Optional) The path to the log file. Default is \code{getOption("log_file")},
and if that is not set it will default to the path \verb{Logs/} in the specified
output directory.}

\item{...}{Additional arguments}
}
\value{
A list of the processed PDF files in the output directory.
}
\description{
This function processes PDF invoices and receipts by extracting the content,
parsing the content, and saving the files to the output directory.
}
\details{
This function implements PDF extraction by extracting the PDF content via
\code{\link[pdftools:pdftools]{pdftools::pdf_text()}} and parsing the extracted text into the following
components:
\itemize{
\item Document Type (Receipt or Invoice)
\item Date
\item Company Name
\item ID (Receipt or Invoice Number)
\item New File Name (Formatted as \code{YYYY-MM-DD-Company-DocumentType-ID.pdf})
}

The PDF file is then copied and renamed using the new file name inside of the
specified output directory and archived in the specified archive directory.

Logs of the processing are written to a log file.
}
\examples{
\dontrun{

fs::dir_copy(fs::path_package("noclocksr", "PDFs", "Input"), fs::path("Input"))

process_pdfs(
  input_dir = ,
  output_dir = fs::path("Output"),
  archive_dir = fs::path("Archive"),
  log_file = fs::path("Logs", paste0(Sys.Date(), ".log"))
)
}

}
\seealso{
\code{\link[=extract_pdf_content]{extract_pdf_content()}}, \code{\link[=parse_pdf_content]{parse_pdf_content()}}
\code{\link[pdftools:pdftools]{pdftools::pdf_text()}}, \code{\link[pdftools:pdftools]{pdftools::pdf_data()}}
}
